@startuml Planta Nuclear
title Diagrama de Clases - Planta Nuclear

interface Notificable {
    + recibirAlerta()
}

class Duenio implements Notificable {
    + recibirAlerta()
}

class Operador implements Notificable {
    + nombre: String

    + insertarBarra(ReactorNuclear): BarraDeControl[]
    + recibirAlerta(reactorNuclear: ReactorNuclear)
}

'class RegistroDeInformacion {}

class PlantaNuclear {
    + reactor: ReactorNuclear
    + operadores: Operador[]
    + duenio: Duenio
    + turbinas: Turbina

    + iniciarSimulacion()
}

'singleton
class ReactorNuclear {
    + energiaGenerada: number
    + temperatura: number
    + horasEncendido: number
    + barrasDeControl: BarraDeControl[]
    + sensor: Sensor
    + notificador: Notificador
    + generadorE: GeneradorDeEnergia
    + estado: 

    + iniciarReactor()
    + pararReactor()
    + disminuirTemperatura() 'temperatura - temperatura * %'
}

class Sensor {
    + verificarTemperatura(): number
}

class Notificador {
    + enviarNotificacion(reactor: Reactor, operadores: Operador[]) 
}

class BarraDeControl {
    + tiempoDeVidaUtil : number
    
    + calcularPorcentaje(tiempoDeVida) : number
}

class GeneradorDeEnergia {
    + tablaEnergia: TablaEnergia
    
    + calcularEnergia() : number
}

class TablaEnergia {
    - tablaEnergia: Map<number, [number, number]>

    - interpolarEnergia(temperatura: number, temperaturaInicial: number, energiaInicial: number, temperaturaFinal: number, energiaFinal: number): number
    + energiaNeta(temperatura: number): number
}

class CapacidadReactor {
    - estado: estado

    - cambiarEstado(temperatura: number)
    + getCapacidad(): number
}

Interface Estado {
    + getCapacidad(): number
}

class Frio implements Estado {
    + getCapacidad(): number
}

class Normal implements Estado {
    + getCapacidad(): number
}

class Moderado implements Estado {
    + getCapacidad(): number
}

class Critico implements Estado {
    + getCapacidad(): number
}

class Apagado implements Estado {
    + getCapacidad(): number
}

enum Constantes {
    + maxTemperatura = 400
    + temperaturaAlerta = 330
    + capacidadMaxReactor = 700
    + minTemperatura = 280
}

PlantaNuclear o-- Operador
PlantaNuclear o-- Duenio
PlantaNuclear *-- ReactorNuclear

ReactorNuclear *-- Sensor
ReactorNuclear *-- Notificador
ReactorNuclear *-- GeneradorDeEnergia
ReactorNuclear o-- BarraDeControl
ReactorNuclear o-- CapacidadReactor

CapacidadReactor o-- Estado

GeneradorDeEnergia o-- TablaEnergia

GeneradorDeEnergia --> Constantes



'Preguntas: ¿Como aumenta la temperatura del reactor? ¿Sola? ¿Lo simulamos?
'Como delegamos las responsabilidades de los Operadores

@enduml
